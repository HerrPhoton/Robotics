<?xml version="1.0"?>
<robot name="tank" xmlns:xacro="http://ros.org/wiki/xacro">

  <!-- Define robot constants -->
  <xacro:property name="base_width" value="1.20"/>
  <xacro:property name="base_length" value="1.50"/>
  <xacro:property name="base_height" value="0.40"/>
  <xacro:property name="base_mass" value="5"/>

  <xacro:property name="cabin_width" value="${0.6 * base_width}"/>
  <xacro:property name="cabin_length" value="${0.6 * base_length}"/>
  <xacro:property name="cabin_height" value="0.50"/>

  <xacro:property name="barrel_radius" value="0.10"/>
  <xacro:property name="barrel_length" value="1.00"/>

  <xacro:property name="gunpoint_radius" value="${barrel_radius * 1.2}"/>
  <xacro:property name="gunpoint_length" value="${barrel_length * 0.2}"/>

  <xacro:property name="keg_radius" value="0.13"/>
  <xacro:property name="keg_length" value="0.30"/>

  <xacro:property name="flagpole_radius" value="0.01"/>
  <xacro:property name="flagpole_length" value="0.60"/>

  <xacro:property name="flag_width" value="0.01"/>
  <xacro:property name="flag_length" value="0.7"/>
  <xacro:property name="flag_height" value="0.3"/>

  <xacro:property name="wheel_radius" value="0.15"/>
  <xacro:property name="wheel_thickness" value="0.08"/>
  <xacro:property name="wheel_ygap" value="0.05"/>
  <xacro:property name="wheel_zoff" value="0.15"/>
  <xacro:property name="wheel_xoff" value="${3 * wheel_radius}"/>
  <xacro:property name="wheel_mass" value="0.5"/>
  <xacro:property name="add_wheel_mass" value="0.0001"/>

  <xacro:property name="caster_xoff" value="0.28"/>

  <material name="red">
    <color rgba="1 0 0 1"/>
  </material>

  <material name="green">
    <color rgba="0 1 0 1"/>
  </material>

  <material name="black">
    <color rgba="0 0 0 1"/>
  </material>

  <!-- Define intertial property macros  -->
  <xacro:macro name="box_inertia" params="m w h d">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 ${pi/2}"/>
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (h*h + d*d)}" ixy="0.0" ixz="0.0" 
               iyy="${(m/12) * (w*w + d*d)}" iyz="0.0" 
               izz="${(m/12) * (w*w + h*h)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="cylinder_inertia" params="m r h">
    <inertial>
      <origin xyz="0 0 0" rpy="${pi/2} 0 0" />
      <mass value="${m}"/>
      <inertia ixx="${(m/12) * (3*r*r + h*h)}" ixy = "0" ixz = "0" 
               iyy="${(m/12) * (3*r*r + h*h)}" iyz = "0" 
               izz="${(m/2) * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <xacro:macro name="sphere_inertia" params="m r">
    <inertial>
      <mass value="${m}"/>
      <inertia ixx="${(2/5) * m * (r*r)}" ixy="0.0" ixz="0.0" 
               iyy="${(2/5) * m * (r*r)}" iyz="0.0" 
               izz="${(2/5) * m * (r*r)}"/>
    </inertial>
  </xacro:macro>

  <!-- Includes -->
  <xacro:include filename="$(find diff_drive_robot)/urdf/robot.gazebo.xacro"/>
  <xacro:include filename="$(find diff_drive_robot)/urdf/depth_camera.urdf.xacro"/>

    <!-- Robot Base -->
  <link name="base_link">
    <visual>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry> 

      <material name="green"/>
    </visual>

    <collision>
      <geometry>
        <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>

    <xacro:box_inertia m="${base_mass}" w="${base_width}" d="${base_length}" h="${base_height}"/>
  </link>

  <gazebo reference="base_link">
      <material>Gazebo/Green</material>
  </gazebo>

    <!-- Cabin -->
  <link name="cabin_link">
    <visual>
      <geometry>
        <box size="${cabin_length} ${cabin_width} ${cabin_height}"/>
      </geometry> 

      <material name="green"/>
    </visual>

  </link>

  <joint name="cabin_joint" type="fixed">
    <parent link="base_link"/>
    <child link="cabin_link"/>
    <origin xyz="0.0 0.0 ${base_height / 2 + cabin_height / 2}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="cabin_link">
      <material>Gazebo/Green</material>
  </gazebo>

    <!-- Barrel -->
  <link name="barrel_link">
    <visual>
      <geometry>
        <cylinder radius="${barrel_radius}" length="${barrel_length}"/>
      </geometry> 

      <material name="green"/>
    </visual>

  </link>

  <joint name="barrel_joint" type="fixed">
    <parent link="cabin_link"/>
    <child link="barrel_link"/>
    <origin xyz="${cabin_length / 2 + barrel_length / 2} 0 0" rpy="0 ${pi / 2} 0"/>
  </joint>

  <gazebo reference="barrel_link">
      <material>Gazebo/Green</material>
  </gazebo>

    <!-- Gunpoint -->
  <link name="gunpoint_link">
    <visual>
      <geometry>
        <cylinder radius="${gunpoint_radius}" length="${gunpoint_length}"/>
      </geometry> 

      <material name="black"/>
    </visual>

  </link>

  <joint name="gunpoint_joint" type="fixed">
    <parent link="barrel_link"/>
    <child link="gunpoint_link"/>
    <origin xyz="0 0 ${barrel_length / 2}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="gunpoint_link">
      <material>Gazebo/Black</material>
  </gazebo>

    <!-- Keg -->
  <xacro:macro name="keg" params="prefix reflect">
    <link name="${prefix}_link">
      <visual>
        <geometry>
          <cylinder radius="${keg_radius}" length="${keg_length}"/>
        </geometry> 

        <material name="green"/>
      </visual>

    </link>

    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${-base_length / 2 - keg_radius} ${reflect * base_width / 4} ${base_height / 2}" rpy="${pi / 2} 0 0"/>
    </joint>

    <gazebo reference="${prefix}_link">
        <material>Gazebo/Green</material>
    </gazebo>
  </xacro:macro>

  <xacro:keg prefix="keg_l" reflect="-1"/>
  <xacro:keg prefix="keg_r" reflect="1"/>

    <!-- Flagpole --> 
  <link name="flagpole_link">
    <visual>
      <geometry>
        <cylinder radius="${flagpole_radius}" length="${flagpole_length}"/>
      </geometry> 

      <material name="black"/>
    </visual>

  </link>

  <joint name="flagpole_joint" type="fixed">
    <parent link="cabin_link"/>
    <child link="flagpole_link"/>
    <origin xyz="${-cabin_length / 2 + flagpole_radius} 0 ${cabin_height / 2 + flagpole_length / 2}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="flagpole_link">
      <material>Gazebo/Black</material>
  </gazebo>

      <!-- Flag --> 
  <link name="flag_link">
    <visual>
      <geometry>
        <box size="${flag_length} ${flag_width} ${flag_height}"/>
      </geometry> 

      <material name="red"/>
    </visual>

  </link>

  <joint name="flag_joint" type="fixed">
    <parent link="flagpole_link"/>
    <child link="flag_link"/>
    <origin xyz="${-flag_length / 2 + flagpole_radius} 0 ${flagpole_length / 2 - flag_height / 2}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="flag_link">
      <material>Gazebo/Red</material>
  </gazebo>

    <!-- Robot Footprint -->
  <link name="base_footprint"/>

  <joint name="base_joint" type="fixed">
    <parent link="base_link"/>
    <child link="base_footprint"/>
    <origin xyz="0.0 0.0 ${-(wheel_radius+wheel_zoff)}" rpy="0 0 0"/>
  </joint>

    <!-- Wheels -->
  <xacro:macro name="driving_wheel" params="prefix xoff zoff y_reflect mass">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>

        <material name="black"/>

      </visual>

      <collision>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>
      </collision>

      <xacro:cylinder_inertia m="${mass}" r="${wheel_radius}" h="${wheel_thickness}"/>
    </link>

    <gazebo reference="${prefix}_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <joint name="${prefix}_joint" type="continuous">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${-xoff} ${y_reflect*(base_width / 2 + wheel_ygap)} ${-zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:macro name="wheel" params="prefix xoff zoff y_reflect">
    <link name="${prefix}_link">
      <visual>
        <origin xyz="0 0 0" rpy="${pi/2} 0 0"/>
        <geometry>
          <cylinder radius="${wheel_radius}" length="${wheel_thickness}"/>
        </geometry>

        <material name="black"/>

      </visual>
    </link>

    <gazebo reference="${prefix}_link">
        <material>Gazebo/Black</material>
    </gazebo>

    <joint name="${prefix}_joint" type="fixed">
      <parent link="base_link"/>
      <child link="${prefix}_link"/>
      <origin xyz="${-xoff} ${y_reflect*(base_width / 2 + wheel_ygap)} ${-zoff}" rpy="0 0 0"/>
      <axis xyz="0 1 0"/>
    </joint>
  </xacro:macro>

  <xacro:driving_wheel prefix="drivewhl_l" xoff="${wheel_xoff}" zoff="${wheel_zoff}" y_reflect="1" mass="${wheel_mass}"/>
  <xacro:wheel prefix="wheel_l1" xoff="${wheel_xoff + 1.5 * wheel_radius}" zoff="${wheel_zoff - wheel_radius}" y_reflect="1"/>
  <xacro:wheel prefix="wheel_l2" xoff="${wheel_xoff - 2 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="1"/>
  <xacro:wheel prefix="wheel_l3" xoff="${wheel_xoff - 4 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="1"/>
  <xacro:wheel prefix="wheel_l4" xoff="${wheel_xoff - 6 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="1"/>
  <xacro:wheel prefix="wheel_l5" xoff="${wheel_xoff - 7.5 * wheel_radius}" zoff="${wheel_zoff - wheel_radius}" y_reflect="1"/>

  <xacro:driving_wheel prefix="drivewhl_r" xoff="${wheel_xoff}" zoff="${wheel_zoff}" y_reflect="-1" mass="${wheel_mass}"/>
  <xacro:wheel prefix="wheel_r1" xoff="${wheel_xoff + 1.5 * wheel_radius}" zoff="${wheel_zoff - wheel_radius}" y_reflect="-1"/>
  <xacro:wheel prefix="wheel_r2" xoff="${wheel_xoff - 2 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="-1"/>
  <xacro:wheel prefix="wheel_r3" xoff="${wheel_xoff - 4 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="-1"/>
  <xacro:wheel prefix="wheel_r4" xoff="${wheel_xoff - 6 * wheel_radius}" zoff="${wheel_zoff}" y_reflect="-1"/>
  <xacro:wheel prefix="wheel_r5" xoff="${wheel_xoff - 7.5 * wheel_radius}" zoff="${wheel_zoff - wheel_radius}" y_reflect="-1"/>

    <!-- Caster Wheel -->
  <link name="front_caster">
    <visual>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>

      <material name="green"/>
    </visual>

    <collision>
      <geometry>
        <sphere radius="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
      </geometry>
    </collision>

    <xacro:sphere_inertia m="0.5" r="${(wheel_radius+wheel_zoff-(base_height/2))}"/>
  </link>

  <joint name="caster_joint" type="fixed">
    <parent link="base_link"/>
    <child link="front_caster"/>
    <origin xyz="${caster_xoff} 0.0 ${-(base_height/2)}" rpy="0 0 0"/>
  </joint>

  <gazebo reference="front_caster">
    <material>Gazebo/Green</material>
    <mu1 value="0.001"/>
    <mu2 value="0.001"/>
  </gazebo>

</robot>
